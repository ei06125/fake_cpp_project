# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build fake_cpp_project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GENERATOR: Ninja

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [self-hosted, macOS, ARM64]

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G ${{ env.GENERATOR }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Request Tests from test_fake_cpp_project
      run: |
        echo "Requesting testing of fake_cpp_project ..."
        set -e
        TARGET_REPO="ei06125/test_fake_cpp_project"
        WORKFLOW_ID="test.yaml"
        GITHUB_TOKEN="${{ secrets.PERSONAL_ACCESS_TOKEN }}"
        API_URL="https://api.github.com/repos/$TARGET_REPO/actions/workflows/$WORKFLOW_ID/dispatches"
        # Trigger the workflow (customize ref and inputs as needed)
        RESPONSE=$(curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          $API_URL \
          --data '{"ref":"main"}')
        
        if [ "$RESPONSE" -lt 200 ] || [ "$RESPONSE" -ge 300 ]; then      
          echo "::error ::Failed to trigger workflow (HTTP $RESPONSE)"
          cat response.txt
          exit 1
        fi
