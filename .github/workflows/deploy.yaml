name: Deploy fake_cpp_project

on:
  workflow_dispatch:
    inputs:
      gitBranch:
        description: 'The git branch to test'
        required: false
        default: 'main'
        type: string

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GENERATOR: Ninja


# You can use permissions to modify the default permissions granted to the GITHUB_TOKEN, adding or removing access as required, so that you only allow the minimum required access.
permissions:
  actions: none
  attestations: none
  checks: none # allows an action to create a check run
  contents: write # allows an action to create a release
  deployments: none
  id-token: none
  issues: none
  models: none
  discussions: none
  packages: write # allows an action to upload and publish packages to GitHub Packages
  pages: none
  pull-requests: write # allows an action to add a label to a pull request
  security-events: none
  statuses: none

jobs:
  deploy:
    runs-on: [self-hosted, macOS, ARM64]
    environment: production
    concurrency: production

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.inputs.gitBranch }}

    - name: Configure CMake
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G ${{ env.GENERATOR }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install
      run: |
        cmake --install ${{github.workspace}}/build --prefix install

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Package
      run: |
        cpack ${{github.workspace}}/build

    - name: Deploy
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./install
        asset_name: fake_cpp_lib-${{ github.ref_name }}.zip
        asset_content_type: application/zip
