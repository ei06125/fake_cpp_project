name: Dev-Build
run-name: Validate Testing Framework

on:
  workflow_call:
    inputs:
      gitBranch:
        description: "The git branch of the test_fake_cpp_project to validate"
        required: true
        default: 'dev' # It should never be main, so we default to 'dev'
        type: string
    outputs:
      build_result:
        description: "Returns if the Build succeeded."
        value: ${{ jobs.on-tests-completed.outputs.build_result }}

env:
  BUILD_TYPE: Release
  GENERATOR: Ninja

jobs:
  build:
    runs-on: [self-hosted, macOS, ARM64]

    steps:
    - uses: actions/checkout@v4
      with:
        path: project

    - name: Check System Requirements
      run: |
        echo "Checking System Requirements: TBD"

    - name: Setup
      run: |
        docker run --name fake_cpp_project-container-${{ github.run_id }} --detach -i -t -v ./project:/project alpine /bin/sh

    - name: Configure
      run: |
        docker exec fake_cpp_project-container-${{ github.run_id }} sh -c "apk update && apk add \
          clang \
          lld \
          ninja \
          ccache \
          cmake \
          build-base \
          python3 \
          git \
          zlib-dev"

    - name: Generate
      run: |
        docker exec -w /project fake_cpp_project-container-${{ github.run_id }} sh -c "cmake -S . -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G ${{ env.GENERATOR }}"

    - name: Build
      run: |
        docker exec -w /project fake_cpp_project-container-${{ github.run_id }} sh -c "cmake --build build --config ${{env.BUILD_TYPE}}"

  request-tests:
    needs: build
    permissions:
      contents: read
      pull-requests: write
    uses: ei06125/test_fake_cpp_project/.github/workflows/test.yaml@main    
    with:
      gitBranch: ${{ inputs.gitBranch }}
    secrets: inherit
  
  on-tests-completed:
    runs-on: [self-hosted, macOS, ARM64]
    needs: 
      - build
      - request-tests
    outputs:
      build_result: ${{ steps.on-tests-completed.outputs.build_result }}
    steps:
    - id: on-tests-completed
      name: On Tests Completed Callback
      run: |
        echo "build_result=${{ needs.request-tests.outputs.test_result }}" >> $GITHUB_OUTPUT

  teardown:
    runs-on: [self-hosted, macOS, ARM64]
    if: always()
    needs:
      - build
      - request-tests
      - on-tests-completed
    steps:
    - name: Teardown
      run: |
        docker container stop fake_cpp_project-container-${{ github.run_id  }} || echo "Container already stopped"
        docker container rm fake_cpp_project-container-${{ github.run_id  }} || echo "Container already removed"
